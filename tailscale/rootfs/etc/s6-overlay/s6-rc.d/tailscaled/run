#!/command/with-contenv bashio
# shellcheck shell=bash
# ==============================================================================
# Home Assistant Community Add-on: Tailscale
# Runs tailscale
# ==============================================================================

readonly TAILSCALED_LOGLEVEL_NOTICE="Tailscale logs will be suppressed after 200 lines, set add-on's configuration option 'log_level' to 'debug' to see further logs"
readonly TAILSCALED_LOGLEVEL_MESSAGE="[further tailscaled logs suppressed, set add-on's configuration option 'log_level' to 'debug' to see further tailscaled logs]"

declare -a options
declare udp_port

bashio::log.info 'Starting Tailscale...'

options+=(--state=/data/tailscaled.state)
options+=(--statedir=/data/state)

# Opt out of client log upload to log.tailscale.io
if ! bashio::debug ; then
  options+=(--no-logs-no-support)
fi

# Use configured UDP port
udp_port=$(bashio::addon.port "41641/udp")
if bashio::var.has_value "${udp_port}"; then
  options+=(--port=${udp_port})
fi

# Use userspace networking by default when not set, or when explicitly enabled
if ! bashio::config.has_value "userspace_networking" || \
  bashio::config.true "userspace_networking";
then
  options+=(--tun=userspace-networking)
fi

# Run Tailscale
# If exists, resolv.dnsmasq.conf pointing to the dummy dnsmasq will be mounted in place of the real resolv.conf only for tailscaled
# This will prevent the DNS at 100.100.100.100 to call back to hassio_dns causing a loop
if ! bashio::fs.file_exists "/etc/resolv.dnsmasq.conf"; then
  # Running the regular way, no resolv.conf replacement
  if bashio::debug ; then
    exec /opt/tailscaled "${options[@]}"
  else
    bashio::log.notice "${TAILSCALED_LOGLEVEL_NOTICE}"
    /opt/tailscaled "${options[@]}" 2>&1 \
      | stdbuf -i0 -oL -eL \
        sed -n -e '1,200p' \
          -e "201c${TAILSCALED_LOGLEVEL_MESSAGE}"
  fi
else
  # Using fake resolv.conf
  bashio::log.info "Using dnsmasq as upstream DNS server for tailscaled"
  mv /etc/resolv.dnsmasq.conf /etc/resolv.for-tailscaled.conf
  if bashio::debug ; then
    exec unshare -m bash -c "mount --bind /etc/resolv.for-tailscaled.conf /etc/resolv.conf; exec /opt/tailscaled $(printf "\"%s\" " "${options[@]}")"
  else
    bashio::log.notice "${TAILSCALED_LOGLEVEL_NOTICE}"
    unshare -m bash -c "mount --bind /etc/resolv.for-tailscaled.conf /etc/resolv.conf; exec /opt/tailscaled $(printf "\"%s\" " "${options[@]}") 2>&1" \
      | stdbuf -i0 -oL -eL \
        sed -n -e '1,200p' \
          -e "201c${TAILSCALED_LOGLEVEL_MESSAGE}"
  fi
fi
