#!/command/with-contenv bashio
# shellcheck shell=bash
# ==============================================================================
# Home Assistant Community Add-on: Tailscale
# Forward incoming tailnet connections to the host's primary interface
# ==============================================================================

declare from_address_ipv4 from_address_ipv6
declare to_address_ipv4 to_address_ipv6

# Return address without prefix, or error if not forwardable
function get_forwardable_address() {
  local address=${1}
  local ipinfo

  if ! bashio::var.has_value "${address}"; then
    return 1
  fi

  # Check if forwarding for the address family is enabled
  if [[ "${address}" =~ .*:.* ]]; then
    if [[ $(</proc/sys/net/ipv6/conf/all/forwarding) -eq 0 ]]; then
      return 1
    fi
  else
    if [[ $(</proc/sys/net/ipv4/ip_forward) -eq 0 ]]; then
      return 1
    fi
  fi

  if ! ipinfo="$(/usr/bin/ipcalc --json "${address}")"; then
    bashio::log.debug "Address ${address} is not valid: ${ipinfo}"
    return 1
  fi

  bashio::jq "${ipinfo}" '.ADDRESS'
}


# Host's IP addresses
function get_host_address() {
  local ip_version="$1"

  if ! bashio::var.equals "$(bashio::network.${ip_version}_method)" "disabled"; then
    for address in "$(bashio::network.${ip_version}_address)"; do
      if get_forwardable_address "${address}"; then
        break
      else
        bashio::log.debug "Skipping non-forwardable ${ip_version} address: ${address}"
      fi
    done
  fi
}

# In case of non userspace networking and if enabled, forward incoming tailnet connections to the host's primary interface
function setup_forwarding() {
  local cmd="$1"
  local ip_version="$2"
  local from_address="$3"
  local from_address_bits="$4"
  local to_address="$5"

  if bashio::var.has_value "${from_address}" && bashio::var.has_value "${to_address}"; then
    bashio::log.info \
      "Forwarding incoming tailnet connections directed to ${from_address} to the host's ${to_address} address (${ip_version})"
    if ${cmd} -t nat -S PREROUTING \
      | grep -Eq "^-A PREROUTING -d ${from_address}/${from_address_bits} -j DNAT --to-destination ${to_address}$"
    then
      bashio::log.notice "Forwarding is already set (${ip_version})"
    else
      # Difference compared to Tailscale's docker image: using only -A append, less intrusive than -I insert
      if ! ${cmd} -t nat -A PREROUTING -d ${from_address} -j DNAT --to-destination ${to_address}; then
        bashio::log.warning "Setting up forwarding is unsuccessful (${ip_version})"
      fi
    fi
  fi
}

# Tailscale's IP addresses
if ! from_address_ipv4=$(/opt/tailscale ip -4); then
  bashio::log.warning "Failed to retrieve Tailscale's IPv4 address"
fi
if ! from_address_ipv6=$(/opt/tailscale ip -6); then
  bashio::log.warning "Failed to retrieve Tailscale's IPv6 address"
fi

# Host's IP addresses
to_address_ipv4=$(get_host_address "ipv4")
to_address_ipv6=$(get_host_address "ipv6")

setup_forwarding "iptables" "IPv4" "${from_address_ipv4}" "32" "${to_address_ipv4}"
setup_forwarding "ip6tables" "IPv6" "${from_address_ipv6}" "128" "${to_address_ipv6}"
