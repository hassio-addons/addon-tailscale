#!/command/with-contenv bashio
# shellcheck shell=bash
# ==============================================================================
# In case of non userspace networking,
# add local subnets to ip rules with higher priority than Tailscale's routing
# ==============================================================================

declare -a routes=()
declare route family
declare ipv4_multiple_tables_enabled
declare ipv6_multiple_tables_enabled
declare protected_routes=0
declare response
declare wait_counter=0

if bashio::config.false "userspace_networking"; then
  ipv4_multiple_tables_enabled=$(zcat /proc/config.gz | { grep -Ec '^CONFIG_IP_MULTIPLE_TABLES=y$' || true ;})
  ipv6_multiple_tables_enabled=$(zcat /proc/config.gz | { grep -Ec '^CONFIG_IPV6_MULTIPLE_TABLES=y$' || true ;})

  # If it is called after network configuration is changed, we need to drop cached network info
  bashio::cache.flush_all
  # It is possible to get "ERROR: Got unexpected response from the API: System is not ready with state: setup"
  # So we wait a little
  while ! bashio::api.supervisor GET "/addons/self/options/config" false &> /dev/null; do
    if (( wait_counter++ == 15 )); then
      bashio::log.error "Supervisor is unreachable"
      bashio::exit.nok
    fi
    bashio::log.info "Waiting for the supervisor to be ready..."
    sleep 2
  done
  if (( wait_counter != 0 )); then
    bashio::log.info "Supervisor is ready"
  fi

  readarray -t routes < <(subnet-routes local)
  if (( 0 < ${#routes[@]} )); then
    bashio::log.info "Adding local subnets to ip rules with higher priority than Tailscale's routing,"
    bashio::log.info "to prevent routing local subnets if the same subnet is routed within your tailnet."
  fi
  for route in "${routes[@]}"; do
    if [[ "${route}" =~ .*:.* ]]; then
      if (( 0 == ${ipv6_multiple_tables_enabled} )); then
        bashio::log.warning "  IPv6 multiple routing tables are not enabled, skip adding route ${route} to ip rules"
        continue
      fi
      family="-6"
    else
      if (( 0 == ${ipv4_multiple_tables_enabled} )); then
        bashio::log.warning "  IPv4 multiple routing tables are not enabled, skip adding route ${route} to ip rules"
        continue
      fi
      family="-4"
    fi
    bashio::log.info "  Adding route ${route} to ip rules"
    if ! response=$(ip "${family}" rule add to "${route}" priority 5000 table main 2>&1); then
      if [[ "${response}" != "RTNETLINK answers: File exists" ]]; then
        echo "${response}"
        bashio::exit.nok
      else
        bashio::log.notice "  Route ${route} is already added to ip rules"
      fi
    fi
    (( protected_routes+=1 ))
  done
  if (( 0 < ${#routes[@]} && 0 == ${protected_routes} )); then
    bashio::log.error "Can't protect any subnets"
    bashio::exit.nok
  fi
fi
